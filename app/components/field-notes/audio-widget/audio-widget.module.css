/* audio-widget.module.css */
.container {
  position: fixed;
  bottom: 16px;
  right: 0px;
  width: 48px; /* Initial size for the circle */
  height: 48px; /* Initial size for the circle */
  border-radius: 8px 0px 0px 8px;
  background-color: #333;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: width 200ms ease-in-out, height 200ms ease-in-out, border-radius 200ms ease-in-out;
  overflow: hidden; /* Ensures content doesn't spill during transition */
  z-index: 1000; /* Ensure it's above other content */

}

.containerExpanded {
  width: 400px; /* Expanded width */
  height: 200px; /* Expanded height */
}

@media (max-width: 768px) {
  .containerExpanded {
    width: 80%;
    display: flex;
  }
}


.playButton {
  color: white; /* Sets default SVG fill color */
  opacity: 1;
  transition: opacity 100ms ease-out;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%; /* Fill the .container */
  height: 100%; /* Fill the .container */
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
}

.playButtonHidden {
  opacity: 0;
  pointer-events: none; /* Prevent interaction when hidden */
}

.widgetContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around; /* Distribute content within the widget */
  width: 100%;
  height: 100%;
  color: white;
  opacity: 0;
  transition: opacity 100ms ease 100ms; /* 100ms delay, 100ms fade-in */
  position: absolute; /* To allow fading in/out in place */
  padding: 8px 16px;
}

@media (max-width: 768px) {
  .widgetContent {
    padding: 12px 12px;
    justify-content: space-between;
  }
  .waveformDisplay {
    width: 280px; /* Adjust this width as needed for mobile */
  }
  .waveformCanvas {
    /* The width attribute on the canvas element itself will be controlled by JS.
       This CSS width: 100% ensures it fits its parent (.waveformDisplay) */
    width: 100%; 
  }
  .bottomContainer {
    width: 280px; /* Match waveformDisplay width on mobile */
  }
}

.widgetContentVisible {
  opacity: 1;
}

.songInfo {
  text-align: left;
  width: 100%;
}

.songTitle {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-bold);
}

.artistName {
  font-size: var(--font-size-sm);
  color: #ccc;
}

.controls {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%; /* Adjust as needed */
  gap: 16px;
}

.controlButton {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  padding: 0;
  width: 40px;
  height: 40px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.controlButton:hover {
  color: #aaa;
}

/* SVG icons are now used in the component directly */

.closeButton {
  background: none;
  border: none;
  color: #818181;
  font-size: var(--font-size-md);
  cursor: pointer;
}

.closeButton:hover {
  color: #aaa;
}

.noteTitle {
  font-size: var(--font-size-md);
  color: #818181;
  line-height: 1; /* Ensure consistent line-height */
}

.waveformDisplay {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@media (max-width: 768px) {
}

.timeContainer {
  display: flex;
  justify-content: space-between;
  width: 90%; /* Match controls width or adjust as needed */
  font-size: 0.8em;
  color: #818181;
}

.bottomContainer {
  display: flex;
  justify-content: space-between;
  width: 360px; /* Match controls width or adjust as needed */
  font-size: 0.8em;
  color: #ccc;
}

.currentTime {
  /* Styles for current time */
}

.duration {
  /* Styles for duration */
}

.waveformCanvas {
  display: block; /* From waveform.module.css */
 /* From waveform.module.css - light background for the canvas */
  /* padding: 16px; */ /* Padding might be too much for the small widget canvas */
  border-radius: 4px; /* Slightly rounded corners for the canvas */
  /* width: 100%; /* Ensure it takes the width from its parent .waveformDisplay or props */
  /* height: 100%; */ /* Ensure it takes the height from its parent .waveformDisplay or props */
  padding: 8px 3px;
}

.statusMessage {
  /* Styles for loading/error messages, similar to .loading/.error in waveform.module.css */
  /* Position this within .waveformDisplay if canvas is hidden */
  color: #555;
  font-size: 0.9em;
  padding: 10px;
  text-align: center;
  width: 100%; /* Take full width of the waveformDisplay area */
}

.errorMessage {
  color: #e74c3c; /* Red for errors */
}

.topContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}